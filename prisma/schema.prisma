generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// User model with role-based access
model User {
  id            String    @id @default(cuid())
  name          String
  email         String    @unique
  password      String
  role          Role      @default(MEMBER)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  
  // Relations
  offices       Office[]
  announcements Announcement[]
  services      Service[]
}

enum Role {
  PASTOR
  OFFICER
  MEMBER
}

// Office model
model Office {
  id          String    @id @default(cuid())
  title       String
  description String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  
  // Relations
  userId      String
  user        User      @relation(fields: [userId], references: [id])
}

// Announcement model
model Announcement {
  id          String    @id @default(cuid())
  title       String
  content     String    @db.Text
  isActive    Boolean   @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  
  // Relations
  authorId    String
  author      User      @relation(fields: [authorId], references: [id])
}

// Service model
model Service {
  id          String    @id @default(cuid())
  title       String
  description String?   @db.Text
  date        DateTime
  location    String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  
  // Relations
  leaderId    String
  leader      User      @relation(fields: [leaderId], references: [id])
  scriptures  Scripture[]
}

// Scripture model
model Scripture {
  id          String    @id @default(cuid())
  book        String
  chapter     Int
  verse       String
  content     String    @db.Text
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  
  // Relations
  serviceId   String?
  service     Service?  @relation(fields: [serviceId], references: [id])
}